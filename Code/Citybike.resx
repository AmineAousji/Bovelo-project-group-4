<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCABeAIYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        +KKKKACiiigAooooAKKM0UAFGaK+Bf2kP+CzXxE+Bfxq8ReDdF/Y4/aG8fR6DfS2a67pOi3LaTfIrNtm
        juEt3Qo8ex+vAfB6VnUqRgry/J/oaUqM6jtC3zaX5tH31RX5VfBX/g4O+KnjHx34+tfF37G/xu0G30GG
        L+xbbTNGutREszbzuv71o447a3YLvSZYZIthclwqBpPvL4A/td/8L18Gw3kfgrxDpetLGz3mjyXlgbi2
        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
</value>
  </data>
</root>